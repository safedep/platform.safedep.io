name: e2e-playwright

on:
  push:
    branches: [staging, main]
  pull_request:
    branches: [staging, main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: Playwright E2E Test

    # Playwright keeps its browsers here; caching this dir is enough.
    env:
      PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1 # stop the post-install hook

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - uses: actions/cache/restore@v4
        id: pw-cache
        with:
          # we can safely cache the browsers, since they are tied to playwright
          # package version: https://playwright.dev/docs/browsers
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps

      - uses: actions/cache/save@v4
        if: steps.pw-cache.outputs.cache-hit != 'true'
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Run Playwright tests
        run: pnpm exec playwright test
        # see .env.e2e and e2e/config/env.ts for the environment variables used
        # in these tests
        env:
          AUTH0_DOMAIN: ${{ secrets.FRONTEND_E2E_AUTH0_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ secrets.FRONTEND_E2E_AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.FRONTEND_E2E_AUTH0_CLIENT_SECRET }}
          E2E_USER_EMAIL: ${{ secrets.FRONTEND_E2E_SAFEDEP_CLOUD_USER }}
          E2E_USER_PASSWORD: ${{ secrets.FRONTEND_E2E_SAFEDEP_CLOUD_PASSWORD }}
