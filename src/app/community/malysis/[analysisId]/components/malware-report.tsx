"use client";

import { Report } from "@buf/safedep_api.bufbuild_es/safedep/messages/malysis/v1/report_pb";
import {
  AlertTriangle,
  CheckCircle,
  ExternalLink,
  FileWarning,
  ShieldAlert,
} from "lucide-react";
import { useState } from "react";
import Confidence from "./confidence";
import { Evidences } from "./evidences";
import { FileSystem } from "./file-system";
import MarkdownContent from "@/components/MarkdownContent";
import { Report_Evidence_Confidence } from "@buf/safedep_api.bufbuild_es/safedep/messages/malysis/v1/report_pb";
import { packageRegistryUrl } from "@/lib/rpc/utils";
import Link from "next/link";

type Tab = {
  key: string;
  label: string;
};

const tabs: Tab[] = [
  {
    key: "evidences",
    label: "Evidences",
  },
  {
    key: "file-system",
    label: "File System",
  },
  {
    key: "warnings",
    label: "Warnings",
  },
];

export default function MalwareReport({ report }: { report: Report }) {
  const [activeTab, setActiveTab] = useState<Tab>(tabs[1]);
  const isMalware = report?.inference?.isMalware ?? false;
  const confidence = report.inference?.confidence ?? 0;
  const isPossiblyMalicious =
    isMalware && confidence !== Report_Evidence_Confidence.HIGH;
  const registryUrl = packageRegistryUrl(report?.packageVersion);

  return (
    <div className="container mx-auto py-12 px-6">
      <div
        className={`bg-white shadow-2xl rounded-3xl overflow-hidden border-2 ${
          isMalware
            ? isPossiblyMalicious
              ? "border-yellow-400"
              : "border-red-500"
            : "border-green-500"
        } transition duration-300`}
      >
        <div className="p-10">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8">
            <div>
              <h1 className="text-4xl font-bold text-gray-900 mb-2">
                {report.packageVersion?.package?.name}@
                {report.packageVersion?.version}
                <Link
                  href={registryUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <ExternalLink className="h-6 w-6 inline-block ml-2" />
                </Link>
              </h1>
              <p className="text-gray-500 text-sm">
                Analyzed at: {report.analyzedAt?.toDate().toLocaleString()}
              </p>
              <p className="text-gray-500 text-sm">
                Source: {report.target?.origin ?? ""}
              </p>
              <p className="text-gray-500 text-sm">
                SHA256: {report.target?.sha256 ?? ""}
              </p>
            </div>
            <div
              className={`mt-6 sm:mt-0 px-6 py-3 rounded-full text-white font-semibold flex items-center transition duration-300 ${
                isMalware
                  ? isPossiblyMalicious
                    ? "bg-yellow-400"
                    : "bg-red-600"
                  : "bg-green-600"
              }`}
            >
              {isMalware ? (
                <>
                  <ShieldAlert className="mr-3 h-6 w-6" />
                  <span className="text-lg">
                    {isPossiblyMalicious ? "Possibly Malicious" : "Malicious"}
                  </span>
                </>
              ) : (
                <>
                  <CheckCircle className="mr-3 h-6 w-6" />
                  <span className="text-lg">Safe</span>
                </>
              )}
            </div>
          </div>

          <div
            className={`p-6 rounded-xl mb-8 ${
              isMalware
                ? isPossiblyMalicious
                  ? "bg-yellow-50 text-yellow-700"
                  : "bg-red-50 text-red-700"
                : "bg-green-50 text-green-700"
            } border-l-8 border-solid transition duration-300`}
          >
            <div className="flex items-center mb-3">
              <AlertTriangle className="h-6 w-6 mr-3" />
              <h2 className="font-bold text-xl">Analysis Result</h2>
            </div>
            <p className="text-lg">
              Confidence: <Confidence confidence={confidence} />
            </p>
          </div>

          <div className="mb-8">
            <h3 className="text-2xl font-bold mb-4">Inference Details</h3>
            <p className="text-gray-700 text-lg leading-relaxed">
              <MarkdownContent content={report.inference?.details ?? ""} />
            </p>
          </div>

          <div className="border-t-2 border-gray-200 pt-8">
            <div className="flex justify-start items-center mb-8">
              {tabs.map((tab) => (
                <button
                  key={tab.key}
                  className={`mr-8 pb-2 text-lg font-semibold transition duration-200 ${
                    activeTab === tab
                      ? "border-b-4 border-blue-600 text-blue-600"
                      : "text-gray-600 hover:text-blue-500"
                  }`}
                  onClick={() => setActiveTab(tab)}
                >
                  {tab.label}
                </button>
              ))}
            </div>

            {activeTab.key === "evidences" && (
              <Evidences
                fileEvidences={report.fileEvidences}
                projectEvidences={report.projectEvidences}
              />
            )}
            {activeTab.key === "file-system" && (
              <FileSystem files={report.fileSystem?.files ?? []} />
            )}
            {activeTab.key === "warnings" && (
              <div>
                {report.warnings.map((warning, index) => (
                  <div
                    key={index}
                    className="flex items-start bg-yellow-50 border-l-8 border-yellow-400 text-yellow-700 p-6 mb-6 rounded-xl shadow-md"
                  >
                    <FileWarning className="h-6 w-6 mr-4 mt-1" />
                    <div>
                      <h3 className="font-bold text-lg mb-2">Warning</h3>
                      <p className="text-base">{warning.message}</p>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
