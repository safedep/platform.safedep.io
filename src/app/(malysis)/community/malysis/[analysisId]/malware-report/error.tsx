"use client";
import { AlertCircle, ArrowLeft, RefreshCcw } from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
} from "@/components/ui/card";

interface ErrorMalwareAnalysisProps {
  error?: string;
  reset?: () => void;
  goBack?: () => void;
}

export default function MalwareAnalysisCardError({
  error = "We couldn't analyze this package. Please try again later.",
  reset,
  goBack,
}: ErrorMalwareAnalysisProps) {
  return (
    <div className="container mx-auto p-4 space-y-6 max-w-6xl min-h-[50vh] grid place-items-center">
      <Card className="border-l-4 border-l-red-500 w-full max-w-2xl">
        <CardHeader>
          <div className="flex items-start gap-4">
            <AlertCircle className="h-6 w-6 text-red-500 shrink-0 mt-1" />
            <div className="space-y-1">
              <h1 className="text-2xl font-semibold tracking-tight">
                Analysis Failed
              </h1>
              <p className="text-base text-muted-foreground">{error}</p>
            </div>
          </div>
        </CardHeader>
        <CardContent>
          <div className="rounded-md bg-red-50 dark:bg-red-950/50 border border-red-200 dark:border-red-900 p-4">
            <div className="space-y-2 text-sm text-red-700 dark:text-red-400">
              <p>Possible reasons for this error:</p>
              <ul className="list-disc pl-4 space-y-1">
                <li>The package repository might be unavailable</li>
                <li>Network connectivity issues</li>
                <li>The analysis service might be experiencing problems</li>
                <li>The package might have been removed or made private</li>
              </ul>
            </div>
          </div>
        </CardContent>
        <CardFooter className="flex gap-4 flex-wrap">
          {reset && (
            <Button
              variant="default"
              onClick={reset}
              className="flex items-center gap-2"
            >
              <RefreshCcw className="h-4 w-4" />
              Try Again
            </Button>
          )}
          {goBack && (
            <Button
              variant="outline"
              onClick={goBack}
              className="flex items-center gap-2"
            >
              <ArrowLeft className="h-4 w-4" />
              Go Back
            </Button>
          )}
        </CardFooter>
      </Card>
    </div>
  );
}
