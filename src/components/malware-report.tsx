"use client";

import { useState } from "react";
import {
  AlertTriangle,
  CheckCircle,
  FileWarning,
  ShieldAlert,
} from "lucide-react";
import { FileSystem } from "./file-system";
import { Evidences } from "./evidences";

interface Report {
  package_version: {
    package: { name: string };
    version: string;
  };
  analyzed_at: string;
  inference: {
    is_malware: boolean;
    is_verified?: boolean;
    confidence: number;
    details: string;
  };
  file_evidences: Evidence[];
  project_evidences: Evidence[];
  file_system: {
    files: { name: string; path: string; content: string }[];
  };
  warnings: { message: string }[];
}

interface Evidence {
  file_key?: string;
  evidence: {
    title: string;
    behavior: string;
    details: string;
    confidence: string;
    source: string;
  };
}

export default function MalwareReport({ report }: { report: Report }) {
  const [activeTab, setActiveTab] = useState<
    "evidences" | "file-system" | "warnings"
  >("evidences");

  const isMalware = report?.inference?.is_malware || false;
  const isVerified = report?.inference?.is_verified || false;

  return (
    <div className="container mx-auto py-12 px-6">
      <div
        className={`bg-white shadow-2xl rounded-3xl overflow-hidden border-2 ${isMalware ? "border-red-500" : "border-green-500"} transition duration-300`}
      >
        <div className="p-10">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8">
            <div>
              <h1 className="text-4xl font-bold text-gray-900 mb-2">
                {report.package_version.package.name}@
                {report.package_version.version}
              </h1>
              <p className="text-gray-500 text-sm">
                Analyzed at: {new Date(report.analyzed_at).toLocaleString()}
              </p>
            </div>
            <div
              className={`mt-6 sm:mt-0 px-6 py-3 rounded-full text-white font-semibold flex items-center transition duration-300 ${isMalware ? "bg-red-600" : "bg-green-600"}`}
            >
              {isMalware ? (
                <>
                  <ShieldAlert className="mr-3 h-6 w-6" />
                  <span className="text-lg">Malicious</span>
                </>
              ) : (
                <>
                  <CheckCircle className="mr-3 h-6 w-6" />
                  <span className="text-lg">Safe</span>
                </>
              )}
            </div>
          </div>

          <div
            className={`p-6 rounded-xl mb-8 ${isMalware ? "bg-red-50 text-red-700" : "bg-green-50 text-green-700"} border-l-8 border-solid transition duration-300`}
          >
            <div className="flex items-center mb-3">
              <AlertTriangle className="h-6 w-6 mr-3" />
              <h2 className="font-bold text-xl">Analysis Result</h2>
            </div>
            <p className="text-lg">
              Confidence: {report.inference.confidence}
              {isVerified && (
                <span className="ml-2 font-semibold">(Verified)</span>
              )}
            </p>
          </div>

          <div className="mb-8">
            <h3 className="text-2xl font-bold mb-4">Inference Details</h3>
            <p className="text-gray-700 text-lg leading-relaxed">
              {report.inference.details}
            </p>
          </div>

          <div className="border-t-2 border-gray-200 pt-8">
            <div className="flex justify-start items-center mb-8">
              {["evidences", "file-system", "warnings"].map((tab) => (
                <button
                  key={tab}
                  className={`mr-8 pb-2 text-lg font-semibold transition duration-200 ${activeTab === tab ? "border-b-4 border-blue-600 text-blue-600" : "text-gray-600 hover:text-blue-500"}`}
                  onClick={() =>
                    setActiveTab(
                      tab as "evidences" | "file-system" | "warnings",
                    )
                  }
                >
                  {tab.charAt(0).toUpperCase() + tab.slice(1)}
                </button>
              ))}
            </div>

            {activeTab === "evidences" && (
              <Evidences
                fileEvidences={report.file_evidences}
                projectEvidences={report.project_evidences}
              />
            )}
            {activeTab === "file-system" && (
              <FileSystem files={report.file_system.files} />
            )}
            {activeTab === "warnings" && (
              <div>
                {report.warnings.map((warning, index) => (
                  <div
                    key={index}
                    className="flex items-start bg-yellow-50 border-l-8 border-yellow-400 text-yellow-700 p-6 mb-6 rounded-xl shadow-md"
                  >
                    <FileWarning className="h-6 w-6 mr-4 mt-1" />
                    <div>
                      <h3 className="font-bold text-lg mb-2">Warning</h3>
                      <p className="text-base">{warning.message}</p>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
