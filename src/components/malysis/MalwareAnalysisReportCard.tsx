import { AlertTriangle, ArrowUpRight } from "lucide-react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableRow,
  TableHeader,
} from "@/components/ui/table";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import EvidenceRow from "@/components/malysis/EvidenceRow";
import {
  Report_Evidence_Confidence,
  type Report,
} from "@buf/safedep_api.bufbuild_es/safedep/messages/malysis/v1/report_pb";
import Link from "next/link";
import { useMemo } from "react";
import { packageRegistryUrl } from "@/lib/rpc/utils";
import MalwareAnalysisMetadata from "./MalwareAnalysisMetadata";
import MalwareAnalysisBadge from "./MalwareAnalysisBadge";
import { cn } from "@/lib/utils";
import MarkdownContent from "../MarkdownContent";

export type MalwareAnalysisStatus = "safe" | "possibly-malicious" | "malicious";

function getMalwareAnalysisStatus(report: Report): MalwareAnalysisStatus {
  const isMalware = report?.inference?.isMalware ?? false;
  const confidence = report.inference?.confidence ?? 0;
  const isPossiblyMalicious =
    isMalware && confidence !== Report_Evidence_Confidence.HIGH;

  if (isPossiblyMalicious) {
    return "possibly-malicious";
  }
  if (isMalware) {
    return "malicious";
  }
  return "safe";
}

export interface MalwareAnalysisReportCardProps {
  report: Report;
}

export default function MalwareAnalysisReportCard({
  report,
}: MalwareAnalysisReportCardProps) {
  const malwareAnalysisStatus = getMalwareAnalysisStatus(report);
  const packageName = `${report.packageVersion?.package?.name}@${report.packageVersion?.version}`;
  const packageUrl = useMemo(() => {
    return packageRegistryUrl(report.packageVersion);
  }, [report.packageVersion]);
  const evidences = useMemo(
    () => [...report.fileEvidences, ...report.projectEvidences],
    [report.fileEvidences, report.projectEvidences],
  );

  return (
    <div className="container mx-auto p-4 space-y-6 max-w-6xl">
      <Card
        className={cn("border-l-4", {
          "border-l-green-500": malwareAnalysisStatus === "safe",
          "border-l-yellow-400": malwareAnalysisStatus === "possibly-malicious",
          "border-l-red-500": malwareAnalysisStatus === "malicious",
        })}
      >
        <CardHeader>
          <div className="flex items-center justify-between">
            <h1 className="text-2xl font-mono group">
              <Link
                href={packageUrl}
                target="_blank"
                rel="noopener noreferrer"
                className="inline-flex items-center hover:text-primary gap-1"
              >
                {packageName}
                <ArrowUpRight className="h-4 w-4 opacity-0 group-hover:opacity-100 transition-opacity" />
              </Link>
            </h1>
            <MalwareAnalysisBadge
              malwareAnalysisStatus={malwareAnalysisStatus}
            />
          </div>
          <MalwareAnalysisMetadata report={report} className="mt-4" />
        </CardHeader>

        <CardContent className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>Summary</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground">
                This analysis was performed using{" "}
                <Link href="https://github.com/safedep/vet">vet</Link> and{" "}
                <Link
                  href="https://docs.safedep.io/cloud/malware-analysis"
                  className="underline hover:text-blue-800 transition"
                >
                  SafeDep Cloud Malicious Package Analysis
                </Link>
                . Integrate with GitHub using{" "}
                <Link
                  href="https://github.com/safedep/vet-action"
                  className="underline hover:text-blue-800 transition"
                >
                  vet-action
                </Link>{" "}
                GitHub Action.
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Details</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-muted-foreground">
                <MarkdownContent content={report.inference?.details ?? ""} />
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="pt-6">
              <Tabs defaultValue="evidences">
                <TabsList className="w-full justify-start">
                  <TabsTrigger value="evidences">Evidences</TabsTrigger>
                  <TabsTrigger value="filesystems">Filesystems</TabsTrigger>
                  <TabsTrigger value="warnings">Warnings</TabsTrigger>
                </TabsList>

                <TabsContent value="evidences" className="mt-4">
                  <div className="space-y-2">
                    {evidences.map((evidence, index) => (
                      // FIXME: backend should provide a key for each evidence,
                      // for now we are using the index. This is BAD!
                      <EvidenceRow key={index} evidence={evidence} />
                    ))}
                  </div>
                </TabsContent>

                <TabsContent value="filesystems" className="mt-4">
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead className="w-[50%]">File</TableHead>
                        <TableHead>Size</TableHead>
                        <TableHead>Type</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      <TableRow>
                        <TableCell className="font-mono">
                          /usr/local/bin
                        </TableCell>
                        <TableCell>23</TableCell>
                        <TableCell>Unknown</TableCell>
                      </TableRow>
                    </TableBody>
                  </Table>
                </TabsContent>

                <TabsContent value="warnings" className="mt-4">
                  <ul className="space-y-4">
                    <li className="flex items-start gap-2">
                      <AlertTriangle
                        className={`h-5 w-5 shrink-0 mt-0.5 ${malwareAnalysisStatus === "safe" ? "text-green-700 dark:text-green-400" : malwareAnalysisStatus === "possibly-malicious" ? "text-yellow-700 dark:text-yellow-400" : "text-red-700 dark:text-red-400"}`}
                      />
                      <span>Suspicious network connections detected</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <AlertTriangle
                        className={`h-5 w-5 shrink-0 mt-0.5 ${malwareAnalysisStatus === "safe" ? "text-green-700 dark:text-green-400" : malwareAnalysisStatus === "possibly-malicious" ? "text-yellow-700 dark:text-yellow-400" : "text-red-700 dark:text-red-400"}`}
                      />
                      <span>Unauthorized file system access attempts</span>
                    </li>
                  </ul>
                </TabsContent>
              </Tabs>
            </CardContent>
          </Card>
        </CardContent>
      </Card>
    </div>
  );
}
